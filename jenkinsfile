pipeline{
    agent any
    parameters{
        choice(name: "action", choices: "create\ndestroy",description: "create or destroy the server")
        string(name: "workspace", description: "name of work space")
    }
    stages{
        stage("cloaning"){
            steps{
                             checkout([$class: 'GitSCM', 				
				branches: [[name: "origin/master"]], 
				userRemoteConfigs: [[url:'''https://github.com/yerrabandireddy/terraform1.git''']]])
            }
        }
        stage("terraforn initializing"){
            when {
                expression {params.action == "create"}
            }
            steps{
                script{
                    sh """
                    terraform init
                    ls -l
                    sleep 10s
                    terraform workspace new ${params.workspace} || true
                    terraform workspace select ${params.workspace}
                    terraform plan
                    """
                }   
            }
        }
        stage("terraform plan"){
            when{
                expression {params.action == "create"}
            }
            steps{
                script{
                    sh """
                    terraform apply -input=false -auto-approve
                    """
                }
            }
        }
        stage("terraform destroy"){
            when{
                expression {params.action == "destroy"}
            }
            steps{
                script{
                    sh """
                    terraform workspace select ${params.workspace}
                    terraform destroy -auto-approve
                    """
                }
            }
        }
    }
}
